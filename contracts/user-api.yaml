openapi: 3.0.0
info:
  description: User Service
  version: '1.0'
  title: User Service

tags:
  - name: user-controller
    description: User Controller

paths:
  /register/user:
    post:
      operationId: registerUser
      tags:
        - user-controller
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        200:
          description: Id of the registered user
          content:
            application/json:
              schema:
                type: integer
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

  /api/user:
    get:
      operationId: getUsersByCriteria
      tags:
        - user-controller
      summary: Get users by criteria
      parameters:
        - in: query
          name: criteria
          required: true
          schema:
            $ref: '#/components/schemas/UserCriteria'
      responses:
        200:
          description: List of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        401:
          $ref: 'common-types.yaml#/components/responses/Unauthorized'
        403:
          $ref: 'common-types.yaml#/components/responses/Forbidden'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

    post:
      operationId: createUser
      tags:
        - user-controller
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        200:
          description: Id of the created user
          content:
            application/json:
              schema:
                type: integer
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        401:
          $ref: 'common-types.yaml#/components/responses/Unauthorized'
        403:
          $ref: 'common-types.yaml#/components/responses/Forbidden'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

  /api/user/{userId}:
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer

    get:
      operationId: getUserById
      tags:
        - user-controller
      summary: Get user by id
      responses:
        200:
          description: User with corresponding id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          $ref: 'common-types.yaml#/components/responses/Unauthorized'
        403:
          $ref: 'common-types.yaml#/components/responses/Forbidden'
        404:
          $ref: 'common-types.yaml#/components/responses/NotFound'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

    put:
      operationId: updateUser
      tags:
        - user-controller
      summary: Update user by id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        204:
          description: User was updated
        400:
          $ref: 'common-types.yaml#/components/responses/BadRequest'
        401:
          $ref: 'common-types.yaml#/components/responses/Unauthorized'
        403:
          $ref: 'common-types.yaml#/components/responses/Forbidden'
        404:
          $ref: 'common-types.yaml#/components/responses/NotFound'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

  /api/user/current:
    get:
      operationId: getCurrentUser
      tags:
        - user-controller
      summary: Get current user
      responses:
        200:
          description: Current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          $ref: 'common-types.yaml#/components/responses/Unauthorized'
        500:
          $ref: 'common-types.yaml#/components/responses/InternalServerError'

components:
  schemas:
    UserRole:
      type: string
      enum:
        - SUPER_ADMIN
        - ADMIN
        - USER

    UpdateUser:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string

    RegisterUser:
      allOf:
        - $ref: '#/components/schemas/UpdateUser'
        - type: object
          properties:
            username:
              type: string
            password:
              type: string
          required:
            - username
            - password

    CreateUser:
      allOf:
        - $ref: '#/components/schemas/RegisterUser'
        - type: object
          properties:
            role:
              $ref: '#/components/schemas/UserRole'
          required:
            - role

    User:
      allOf:
        - $ref: '#/components/schemas/UpdateUser'
        - type: object
          properties:
            id:
              type: integer
            username:
              type: string
            role:
              $ref: '#/components/schemas/UserRole'
          required:
            - id
            - username
            - role

    UserList:
      type: object
      properties:
        total:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/User'
      required:
        - total
        - items

    UserCriteria:
      allOf:
        - $ref: 'common-types.yaml#/components/schemas/BaseCriteria'
        - type: object
          properties:
            ids:
              type: array
              items:
                type: integer
            query:
              type: string
            role:
              $ref: '#/components/schemas/UserRole'

    ShortUser:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
      required:
        - id
        - username